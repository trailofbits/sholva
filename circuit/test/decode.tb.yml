module: decode
file: ../decode/decode.v
inputs:
  - "96 raw_instr"
  - "32 eax"
  - "32 ebx"
  - "32 ecx"
  - "32 edx"
  - "32 esi"
  - "32 edi"
  - "32 esp"
  - "32 ebp"
  - "1 hint1_is_write"
  - "32 hint1_address"
  - "32 hint1_data"
  - "1 hint2_is_write"
  - "32 hint2_address"
  - "32 hint2_data"
outputs:
  - "4 instr_len"
  - "7 opc"
  - "32 opnd0_r"
  - "32 opnd1_r"
  - "32 opnd2_r"
  - "2 dest0_kind"
  - "2 dest1_kind"
  - "32 dest0_sel"
  - "32 dest1_sel"
vector_specs:
  - _description: "ADD eax, ebx (eax=0x12345678, ebx=0x90abcdef)"

    # INPUTS
    raw_instr: 0xd801
    eax: 0x12345678
    ebx: 0x90abcdef
    esp: 0xffffddb0

    # OUTPUTS
    instr_len: 2
    opc: 0 # CMD_ADD
    opnd0_r: 0x12345678
    opnd1_r: 0x90abcdef
    dest0_kind: 1 # OPND_DEST_REG_1HOT
    dest1_kind: 0 # OPND_DEST_NONE
    dest0_sel: 0 # EAX

  - _description: "lea ecx, [(eax * 2) + ebx + 2] (eax=0xaaaaaaaa, ebx=0xbbbbbbbb)"

    # INPUTS
    raw_instr: 0x02434c8d
    eax: 0xaaaaaaaa
    ebx: 0xbbbbbbbb

    # OUTPUTS
    instr_len: 4
    opc: 25 # CMD_LEA
    opnd0_r: 0 # NOTE(ww): We never read operand#0.
    opnd1_r: 0x11111111
    dest0_kind: 1 # OPND_DEST_REG_1HOT
    dest1_kind: 0 # OPND_DEST_NONE
    dest0_sel: 1 # ECX
    dest1_sel: 0

  - _description: "inc EAX"

    # INPUTS
    raw_instr: 0x40
    eax: 0xaaaaaa00

    # OUTPUTS
    instr_len: 1
    opc: 20 # CMD_INC
    opnd0_r: 0xaaaaaa00
    opnd1_r: 1 # implicit 1
    dest0_kind: 1 # OPND_DEST_REG_1HOT
    dest1_kind: 0 # OPND_DEST_NONE
    dest0_sel: 0 # EAX
    dest1_sel: 0

  - _description: "rcl al, 1"

    # INPUTS
    raw_instr: 0xd0d0
    eax: 0xaabbccdd

    # OUTPUTS
    instr_len: 2
    opc: 61 # CMD_RCL
    opnd0_r: 0xaabbccdd
    opnd1_r: 1 # implicit 1
    dest0_kind: 1 # OPND_DEST_REG_1HOT
    dest0_sel: 0 # EAX

  - _description: "call 0x1234 (relative displacement)"

    # INPUTS
    raw_instr: 0x00001230e8
    esp: 0xaabbccdd

    # OUTPUTS
    instr_len: 5
    opc: 64 # CMD_CALLr
    opnd0_r: 0x1230 # pre-adjust
    opnd1_r: 0xaabbccdd
    opnd2_r: 4
    dest1_kind: 1 # OPND_DEST_REG_1HOT
    dest1_sel: 4 # ESP

  - _description: "call eax (absolute indirect)"

    # INPUTS
    raw_instr: 0xd0ff
    eax: 0xaabbccdd
    esp: 0x11223344

    # OUTPUTS
    instr_len: 2
    opc: 65 # CMD_CALLi
    opnd0_r: 0xaabbccdd
    opnd1_r: 0x11223344
    opnd2_r: 4
    dest1_kind: 1 # OPND_DEST_REG_1HOT
    dest1_sel: 4 # ESP

  - _description: "jle 0x8049039 <main+0x2c> (rel8)"

    # INPUTS
    raw_instr: 0x117e

    # OUTPUTS
    instr_len: 2
    opc: 80 # CMD_JLE
    opnd0_r: 0x11 # pre-adjust

  - _description: "cmp DWORD PTR [ebp-0x4],0xa (ebp=0xffc51afc)"

    # INPUTS
    raw_instr: 0x0afc7d83
    ebp: 0xffc51afc
    hint1_is_write: 0 # read
    hint1_address: 0xffc51af8 # ebp - 4
    hint1_data: 0xb

    # OUTPUTS
    instr_len: 4
    opc: 13 # CMD_CMP
    opnd0_r: 0x0b
    opnd1_r: 0x0a
