// this file was generated by ./codegen/tbgen on 2021-04-09 15:06:02 -0400
// do NOT edit it by hand
module agu_tb();
reg clk, reset;
reg [31:0] current_vec, error_count;
reg [129:0] test_vectors [127:0];
reg [1:0] scale;
reg [31:0] index;
reg [31:0] base;
reg [31:0] disp;
reg [31:0] exp_address;
wire [31:0] address;
agu dut(
.scale(scale),
.index(index),
.base(base),
.disp(disp),
.address(address)
);
always
  begin
    clk = 1; #5; clk = 0; #5;
  end
initial
  begin
    $dumpfile("agu.tb.vcd");
    $dumpvars(0, agu_tb);
    $readmemb("agu.tv", test_vectors);
    current_vec = 0; error_count = 0;
    reset = 1; #10; reset = 0;
  end
always @(posedge clk)
  begin
    #1; { scale, index, base, disp, exp_address } = test_vectors[current_vec];
  end
always @(negedge clk)
  begin
    if (~reset) begin
      if (exp_address === address || exp_address === 32'bx) begin
  $display("TBGEN-PASS agu:%0d address", current_vec);
end else begin
  $display("TBGEN-FAIL agu:%0d expected address to be 0x%h, was 0x%h", current_vec, exp_address, address);
  error_count = error_count + 1;
end

      current_vec = current_vec + 1;

      if (test_vectors[current_vec] === 130'bx) begin
        $display("TBGEN-DONE agu %0d errors=%0d", current_vec, error_count);
        $finish;
      end
    end
  end
endmodule
